{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection 1. Theoretical Foundation Governing Equations of Projectile Motion We start from Newton\u2019s Second Law for a projectile launched in a uniform gravitational field (ignoring air resistance): \\[ \\mathbf{F} = m \\mathbf{a} \\] For a projectile of mass \\(m\\) : Horizontal direction ( \\(x\\) ): no acceleration (neglecting air resistance), so \\[ a_x = 0 \\implies \\frac{d^2 x}{dt^2} = 0 \\] Vertical direction ( \\(y\\) ): \\[ a_y = -g \\implies \\frac{d^2 y}{dt^2} = -g \\] Initial Conditions At \\(t = 0\\) : \\[ x(0) = 0, \\quad y(0) = h \\] \\[ v_x(0) = v_0 \\cos \\theta, \\quad v_y(0) = v_0 \\sin \\theta \\] where \\(v_0\\) is the initial speed, \\(\\theta\\) is the angle of projection, \\(h\\) is the initial height, \\(g\\) is gravitational acceleration. Solutions to the Equations Solving the second order ODEs: Horizontal motion: \\[ x(t) = v_0 \\cos \\theta \\cdot t \\] Vertical motion: \\[ y(t) = h + v_0 \\sin \\theta \\cdot t - \\frac{1}{2} g t^2 \\] Time of Flight The time when projectile hits the ground ( \\(y=0\\) ): \\[ 0 = h + v_0 \\sin \\theta \\cdot t - \\frac{1}{2} g t^2 \\] Solve quadratic in \\(t\\) : \\[ t = \\frac{v_0 \\sin \\theta + \\sqrt{(v_0 \\sin \\theta)^2 + 2 g h}}{g} \\] (Only the positive root is physically meaningful.) Horizontal Range Using \\(t\\) above, range \\(R\\) is \\[ R(\\theta) = x(t) = v_0 \\cos \\theta \\times t \\] This expression defines a family of solutions parametrized by \\(\\theta\\) , \\(v_0\\) , \\(h\\) , and \\(g\\) . 2. Analysis of the Range The range depends on the angle \\(\\theta\\) via \\(\\sin\\theta\\) and \\(\\cos\\theta\\) . For \\(h=0\\) , the well-known formula reduces to \\[ R = \\frac{v_0^2}{g} \\sin 2\\theta \\] which peaks at \\(\\theta = 45^\\circ\\) . When \\(h \\neq 0\\) , the maximum range angle shifts. Changes in \\(v_0\\) scale the range proportionally. Increasing \\(g\\) reduces the range. 3. Practical Applications Uneven terrain : Can model \\(h\\neq 0\\) . Air resistance : Requires adding drag force, typically non-linear; analytical solutions become complicated, often requiring numerical simulation. Wind : Adds horizontal acceleration component. Sports and Engineering : Ballistics, sports (soccer, basketball), launch vehicles, fireworks. 4. Implementation: Python Simulation & Visualization import numpy as np import matplotlib.pyplot as plt def time_of_flight(v0, theta, h, g=9.81): \"\"\" Calculate time of flight until projectile hits ground y=0. Parameters: v0: initial speed (m/s) theta: launch angle in radians h: initial height (m) g: gravitational acceleration (m/s^2) Returns: time_of_flight (float) \"\"\" term1 = v0 * np.sin(theta) discriminant = term1**2 + 2 * g * h t_flight = (term1 + np.sqrt(discriminant)) / g return t_flight def range_projectile(v0, theta, h, g=9.81): \"\"\" Calculate horizontal range of projectile. Parameters: v0: initial speed (m/s) theta: launch angle in radians h: initial height (m) g: gravitational acceleration (m/s^2) Returns: horizontal range (float) \"\"\" t_flight = time_of_flight(v0, theta, h, g) return v0 * np.cos(theta) * t_flight # Parameters v0 = 20 # m/s h = 0 # initial height in meters g = 9.81 # m/s^2 angles_deg = np.linspace(0, 90, 500) angles_rad = np.radians(angles_deg) ranges = np.array([range_projectile(v0, angle, h, g) for angle in angles_rad]) # Plot plt.figure(figsize=(10,6)) plt.plot(angles_deg, ranges) plt.title(\"Projectile Range vs Launch Angle\") plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.show() Exploring Parameters You can vary \\(v_0\\) , \\(h\\) , and \\(g\\) and plot multiple curves on the same graph: h_values = [0, 5, 10] # Different launch heights plt.figure(figsize=(10,6)) for h_i in h_values: ranges = np.array([range_projectile(v0, angle, h_i, g) for angle in angles_rad]) plt.plot(angles_deg, ranges, label=f'h = {h_i} m') plt.title(\"Projectile Range vs Launch Angle for Different Launch Heights\") plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.legend() plt.grid(True) plt.show() 5. Discussion on Limitations and Extensions Limitations of the Idealized Model: Ignores air resistance which can significantly reduce range and alter optimal angle. Assumes uniform gravitational field. Assumes flat ground at final landing spot (can be adapted for uneven terrain but complex). Possible Extensions: Air Drag: Model drag force \\(\\mathbf{F}_d = -\\frac{1}{2} C_d \\rho A v^2 \\hat{v}\\) , numerical integration required. Wind Effects: Add horizontal wind velocity component. Variable Gravity: For long-range trajectories (e.g., missiles, rockets), gravity changes with altitude. Spin & Magnus Effect: For sports balls. Summary Derived general projectile motion equations from first principles. Obtained formula for range as function of launch angle, initial velocity, initial height, and gravity. Demonstrated Python simulation with visualizations. Discussed real-world applicability and model limitations.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#governing-equations-of-projectile-motion","text":"We start from Newton\u2019s Second Law for a projectile launched in a uniform gravitational field (ignoring air resistance): \\[ \\mathbf{F} = m \\mathbf{a} \\] For a projectile of mass \\(m\\) : Horizontal direction ( \\(x\\) ): no acceleration (neglecting air resistance), so \\[ a_x = 0 \\implies \\frac{d^2 x}{dt^2} = 0 \\] Vertical direction ( \\(y\\) ): \\[ a_y = -g \\implies \\frac{d^2 y}{dt^2} = -g \\]","title":"Governing Equations of Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#initial-conditions","text":"At \\(t = 0\\) : \\[ x(0) = 0, \\quad y(0) = h \\] \\[ v_x(0) = v_0 \\cos \\theta, \\quad v_y(0) = v_0 \\sin \\theta \\] where \\(v_0\\) is the initial speed, \\(\\theta\\) is the angle of projection, \\(h\\) is the initial height, \\(g\\) is gravitational acceleration.","title":"Initial Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#solutions-to-the-equations","text":"Solving the second order ODEs: Horizontal motion: \\[ x(t) = v_0 \\cos \\theta \\cdot t \\] Vertical motion: \\[ y(t) = h + v_0 \\sin \\theta \\cdot t - \\frac{1}{2} g t^2 \\]","title":"Solutions to the Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#time-of-flight","text":"The time when projectile hits the ground ( \\(y=0\\) ): \\[ 0 = h + v_0 \\sin \\theta \\cdot t - \\frac{1}{2} g t^2 \\] Solve quadratic in \\(t\\) : \\[ t = \\frac{v_0 \\sin \\theta + \\sqrt{(v_0 \\sin \\theta)^2 + 2 g h}}{g} \\] (Only the positive root is physically meaningful.)","title":"Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#horizontal-range","text":"Using \\(t\\) above, range \\(R\\) is \\[ R(\\theta) = x(t) = v_0 \\cos \\theta \\times t \\] This expression defines a family of solutions parametrized by \\(\\theta\\) , \\(v_0\\) , \\(h\\) , and \\(g\\) .","title":"Horizontal Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"The range depends on the angle \\(\\theta\\) via \\(\\sin\\theta\\) and \\(\\cos\\theta\\) . For \\(h=0\\) , the well-known formula reduces to \\[ R = \\frac{v_0^2}{g} \\sin 2\\theta \\] which peaks at \\(\\theta = 45^\\circ\\) . When \\(h \\neq 0\\) , the maximum range angle shifts. Changes in \\(v_0\\) scale the range proportionally. Increasing \\(g\\) reduces the range.","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"Uneven terrain : Can model \\(h\\neq 0\\) . Air resistance : Requires adding drag force, typically non-linear; analytical solutions become complicated, often requiring numerical simulation. Wind : Adds horizontal acceleration component. Sports and Engineering : Ballistics, sports (soccer, basketball), launch vehicles, fireworks.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation-python-simulation-visualization","text":"import numpy as np import matplotlib.pyplot as plt def time_of_flight(v0, theta, h, g=9.81): \"\"\" Calculate time of flight until projectile hits ground y=0. Parameters: v0: initial speed (m/s) theta: launch angle in radians h: initial height (m) g: gravitational acceleration (m/s^2) Returns: time_of_flight (float) \"\"\" term1 = v0 * np.sin(theta) discriminant = term1**2 + 2 * g * h t_flight = (term1 + np.sqrt(discriminant)) / g return t_flight def range_projectile(v0, theta, h, g=9.81): \"\"\" Calculate horizontal range of projectile. Parameters: v0: initial speed (m/s) theta: launch angle in radians h: initial height (m) g: gravitational acceleration (m/s^2) Returns: horizontal range (float) \"\"\" t_flight = time_of_flight(v0, theta, h, g) return v0 * np.cos(theta) * t_flight # Parameters v0 = 20 # m/s h = 0 # initial height in meters g = 9.81 # m/s^2 angles_deg = np.linspace(0, 90, 500) angles_rad = np.radians(angles_deg) ranges = np.array([range_projectile(v0, angle, h, g) for angle in angles_rad]) # Plot plt.figure(figsize=(10,6)) plt.plot(angles_deg, ranges) plt.title(\"Projectile Range vs Launch Angle\") plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.show()","title":"4. Implementation: Python Simulation &amp; Visualization"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#exploring-parameters","text":"You can vary \\(v_0\\) , \\(h\\) , and \\(g\\) and plot multiple curves on the same graph: h_values = [0, 5, 10] # Different launch heights plt.figure(figsize=(10,6)) for h_i in h_values: ranges = np.array([range_projectile(v0, angle, h_i, g) for angle in angles_rad]) plt.plot(angles_deg, ranges, label=f'h = {h_i} m') plt.title(\"Projectile Range vs Launch Angle for Different Launch Heights\") plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.legend() plt.grid(True) plt.show()","title":"Exploring Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-discussion-on-limitations-and-extensions","text":"Limitations of the Idealized Model: Ignores air resistance which can significantly reduce range and alter optimal angle. Assumes uniform gravitational field. Assumes flat ground at final landing spot (can be adapted for uneven terrain but complex). Possible Extensions: Air Drag: Model drag force \\(\\mathbf{F}_d = -\\frac{1}{2} C_d \\rho A v^2 \\hat{v}\\) , numerical integration required. Wind Effects: Add horizontal wind velocity component. Variable Gravity: For long-range trajectories (e.g., missiles, rockets), gravity changes with altitude. Spin & Magnus Effect: For sports balls.","title":"5. Discussion on Limitations and Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#summary","text":"Derived general projectile motion equations from first principles. Obtained formula for range as function of launch angle, initial velocity, initial height, and gravity. Demonstrated Python simulation with visualizations. Discussed real-world applicability and model limitations.","title":"Summary"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Solution for Problem 2: Dynamics of a Forced Damped Pendulum 1. Theoretical Foundation Differential Equation The motion of a forced damped pendulum is governed by the nonlinear differential equation: \\[ \\frac{d^2 \\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin \\theta = A \\cos(\\omega t) \\] where \\(\\theta(t)\\) : angular displacement, \\(b\\) : damping coefficient, \\(g\\) : acceleration due to gravity, \\(L\\) : length of the pendulum, \\(A\\) : amplitude of external driving torque, \\(\\omega\\) : angular frequency of driving force. Small-Angle Approximation For small oscillations, \\(\\sin \\theta \\approx \\theta\\) . The equation becomes linear: \\[ \\frac{d^2 \\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{L} \\theta = A \\cos(\\omega t) \\] Homogeneous Solution (No Driving Force) The characteristic equation: \\[ r^2 + b r + \\frac{g}{L} = 0 \\] Solutions: \\[ r = \\frac{-b \\pm \\sqrt{b^2 - 4 \\frac{g}{L}}}{2} \\] Underdamped ( \\(b^2 < 4g/L\\) ): Oscillatory decay. Overdamped ( \\(b^2 > 4g/L\\) ): Exponential decay without oscillation. Critically damped ( \\(b^2 = 4g/L\\) ). Particular Solution (Steady-State Forced Response) Assuming steady-state solution of form: \\[ \\theta_p = \\Theta \\cos(\\omega t - \\delta) \\] Plug into differential equation and solve for amplitude \\(\\Theta\\) : \\[ \\Theta = \\frac{A}{\\sqrt{\\left(\\frac{g}{L} - \\omega^2\\right)^2 + b^2 \\omega^2}} \\] Phase lag \\(\\delta\\) satisfies: \\[ \\tan \\delta = \\frac{b \\omega}{\\frac{g}{L} - \\omega^2} \\] Resonance Condition Resonance approximately occurs when the driving frequency matches the natural frequency of the system (undamped): \\[ \\omega_0 = \\sqrt{\\frac{g}{L}} \\] The presence of damping \\(b\\) shifts and broadens the resonance peak. 2. Analysis of Dynamics Damping \\(b\\) : Increasing damping reduces amplitude, broadens resonance peak, and suppresses chaos. Driving amplitude \\(A\\) : Larger amplitudes can push the system into nonlinear and chaotic regimes. Driving frequency \\(\\omega\\) : Changes in frequency cause resonance effects; near \\(\\omega_0\\) , amplitude peaks. Nonlinearity ( \\(\\sin \\theta\\) ) : For large \\(\\theta\\) , the system exhibits complex dynamics including period doubling and chaos. 3. Practical Applications Energy Harvesting: Mechanical oscillators capturing ambient vibrations often modeled as forced damped pendulums. Suspension Bridges: Forced oscillations due to wind or traffic forces modeled similarly to study resonance risks. Oscillating Circuits: RLC circuits with external AC sources show analogous behavior. Biomechanics: Human gait analyzed with forced oscillator models. 4. Implementation: Python Simulation We use numerical integration (Runge-Kutta 4th order) to solve the nonlinear ODE. import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Parameters g = 9.81 # m/s^2 L = 1.0 # meters b = 0.5 # damping coefficient A = 1.2 # driving amplitude omega = 2/3 # driving frequency # System of first order ODEs: # Let y = [theta, omega_theta], where omega_theta = dtheta/dt def forced_damped_pendulum(t, y): theta, omega_theta = y dtheta_dt = omega_theta domega_dt = -b * omega_theta - (g/L) * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] # Time span t_span = (0, 60) t_eval = np.linspace(*t_span, 1000) # Initial conditions: theta=0.2 rad, omega=0 y0 = [0.2, 0.0] # Solve ODE sol = solve_ivp(forced_damped_pendulum, t_span, y0, t_eval=t_eval, method='RK45') # Plot angular displacement over time plt.figure(figsize=(10,4)) plt.plot(sol.t, sol.y[0]) plt.title(\"Forced Damped Pendulum: Angular Displacement vs Time\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Angle \u03b8 (rad)\") plt.grid(True) plt.show() # Phase space plot (\u03b8 vs \u03c9) plt.figure(figsize=(6,6)) plt.plot(sol.y[0], sol.y[1]) plt.title(\"Phase Space of Forced Damped Pendulum\") plt.xlabel(\"Angle \u03b8 (rad)\") plt.ylabel(\"Angular velocity \u03c9 (rad/s)\") plt.grid(True) plt.show() 5. Extending the Analysis: Poincar\u00e9 Section To analyze transitions to chaos, sample the system at driving period intervals \\(T = \\frac{2\\pi}{\\omega}\\) : T = 2 * np.pi / omega poincare_times = np.arange(0, t_span[1], T) # Interpolate solution at Poincare times theta_poincare = np.interp(poincare_times, sol.t, sol.y[0]) omega_poincare = np.interp(poincare_times, sol.t, sol.y[1]) plt.figure(figsize=(6,6)) plt.scatter(theta_poincare, omega_poincare, s=10, color='red') plt.title(\"Poincar\u00e9 Section of Forced Damped Pendulum\") plt.xlabel(\"Angle \u03b8 (rad)\") plt.ylabel(\"Angular velocity \u03c9 (rad/s)\") plt.grid(True) plt.show() 6. Discussion on Limitations and Extensions Nonlinearity: Full nonlinear \\(\\sin \\theta\\) model necessary for large oscillations. Numerical Sensitivity: Chaotic regimes require fine resolution and careful numerical methods. Extensions: Introduce nonlinear damping, non-periodic forcing, or coupling multiple pendulums. Physical factors: Air resistance, structural flex, and other real-world factors not included here. Summary Derived and analyzed forced damped pendulum equations. Explored approximate linear solutions and resonance. Created computational models to simulate and visualize behavior. Used phase space and Poincar\u00e9 sections to identify chaotic transitions. Discussed real-world relevance and possible extensions.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solution-for-problem-2-dynamics-of-a-forced-damped-pendulum","text":"","title":"Solution for Problem 2: Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#differential-equation","text":"The motion of a forced damped pendulum is governed by the nonlinear differential equation: \\[ \\frac{d^2 \\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin \\theta = A \\cos(\\omega t) \\] where \\(\\theta(t)\\) : angular displacement, \\(b\\) : damping coefficient, \\(g\\) : acceleration due to gravity, \\(L\\) : length of the pendulum, \\(A\\) : amplitude of external driving torque, \\(\\omega\\) : angular frequency of driving force.","title":"Differential Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For small oscillations, \\(\\sin \\theta \\approx \\theta\\) . The equation becomes linear: \\[ \\frac{d^2 \\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{L} \\theta = A \\cos(\\omega t) \\]","title":"Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#homogeneous-solution-no-driving-force","text":"The characteristic equation: \\[ r^2 + b r + \\frac{g}{L} = 0 \\] Solutions: \\[ r = \\frac{-b \\pm \\sqrt{b^2 - 4 \\frac{g}{L}}}{2} \\] Underdamped ( \\(b^2 < 4g/L\\) ): Oscillatory decay. Overdamped ( \\(b^2 > 4g/L\\) ): Exponential decay without oscillation. Critically damped ( \\(b^2 = 4g/L\\) ).","title":"Homogeneous Solution (No Driving Force)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#particular-solution-steady-state-forced-response","text":"Assuming steady-state solution of form: \\[ \\theta_p = \\Theta \\cos(\\omega t - \\delta) \\] Plug into differential equation and solve for amplitude \\(\\Theta\\) : \\[ \\Theta = \\frac{A}{\\sqrt{\\left(\\frac{g}{L} - \\omega^2\\right)^2 + b^2 \\omega^2}} \\] Phase lag \\(\\delta\\) satisfies: \\[ \\tan \\delta = \\frac{b \\omega}{\\frac{g}{L} - \\omega^2} \\]","title":"Particular Solution (Steady-State Forced Response)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-condition","text":"Resonance approximately occurs when the driving frequency matches the natural frequency of the system (undamped): \\[ \\omega_0 = \\sqrt{\\frac{g}{L}} \\] The presence of damping \\(b\\) shifts and broadens the resonance peak.","title":"Resonance Condition"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"Damping \\(b\\) : Increasing damping reduces amplitude, broadens resonance peak, and suppresses chaos. Driving amplitude \\(A\\) : Larger amplitudes can push the system into nonlinear and chaotic regimes. Driving frequency \\(\\omega\\) : Changes in frequency cause resonance effects; near \\(\\omega_0\\) , amplitude peaks. Nonlinearity ( \\(\\sin \\theta\\) ) : For large \\(\\theta\\) , the system exhibits complex dynamics including period doubling and chaos.","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"Energy Harvesting: Mechanical oscillators capturing ambient vibrations often modeled as forced damped pendulums. Suspension Bridges: Forced oscillations due to wind or traffic forces modeled similarly to study resonance risks. Oscillating Circuits: RLC circuits with external AC sources show analogous behavior. Biomechanics: Human gait analyzed with forced oscillator models.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation-python-simulation","text":"We use numerical integration (Runge-Kutta 4th order) to solve the nonlinear ODE. import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Parameters g = 9.81 # m/s^2 L = 1.0 # meters b = 0.5 # damping coefficient A = 1.2 # driving amplitude omega = 2/3 # driving frequency # System of first order ODEs: # Let y = [theta, omega_theta], where omega_theta = dtheta/dt def forced_damped_pendulum(t, y): theta, omega_theta = y dtheta_dt = omega_theta domega_dt = -b * omega_theta - (g/L) * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] # Time span t_span = (0, 60) t_eval = np.linspace(*t_span, 1000) # Initial conditions: theta=0.2 rad, omega=0 y0 = [0.2, 0.0] # Solve ODE sol = solve_ivp(forced_damped_pendulum, t_span, y0, t_eval=t_eval, method='RK45') # Plot angular displacement over time plt.figure(figsize=(10,4)) plt.plot(sol.t, sol.y[0]) plt.title(\"Forced Damped Pendulum: Angular Displacement vs Time\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Angle \u03b8 (rad)\") plt.grid(True) plt.show() # Phase space plot (\u03b8 vs \u03c9) plt.figure(figsize=(6,6)) plt.plot(sol.y[0], sol.y[1]) plt.title(\"Phase Space of Forced Damped Pendulum\") plt.xlabel(\"Angle \u03b8 (rad)\") plt.ylabel(\"Angular velocity \u03c9 (rad/s)\") plt.grid(True) plt.show()","title":"4. Implementation: Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-extending-the-analysis-poincare-section","text":"To analyze transitions to chaos, sample the system at driving period intervals \\(T = \\frac{2\\pi}{\\omega}\\) : T = 2 * np.pi / omega poincare_times = np.arange(0, t_span[1], T) # Interpolate solution at Poincare times theta_poincare = np.interp(poincare_times, sol.t, sol.y[0]) omega_poincare = np.interp(poincare_times, sol.t, sol.y[1]) plt.figure(figsize=(6,6)) plt.scatter(theta_poincare, omega_poincare, s=10, color='red') plt.title(\"Poincar\u00e9 Section of Forced Damped Pendulum\") plt.xlabel(\"Angle \u03b8 (rad)\") plt.ylabel(\"Angular velocity \u03c9 (rad/s)\") plt.grid(True) plt.show()","title":"5. Extending the Analysis: Poincar\u00e9 Section"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-discussion-on-limitations-and-extensions","text":"Nonlinearity: Full nonlinear \\(\\sin \\theta\\) model necessary for large oscillations. Numerical Sensitivity: Chaotic regimes require fine resolution and careful numerical methods. Extensions: Introduce nonlinear damping, non-periodic forcing, or coupling multiple pendulums. Physical factors: Air resistance, structural flex, and other real-world factors not included here.","title":"6. Discussion on Limitations and Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#summary","text":"Derived and analyzed forced damped pendulum equations. Explored approximate linear solutions and resonance. Created computational models to simulate and visualize behavior. Used phase space and Poincar\u00e9 sections to identify chaotic transitions. Discussed real-world relevance and possible extensions.","title":"Summary"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}